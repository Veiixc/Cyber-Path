void addWall(CASE **caseGrid,int targetRow,int targetCol)
{
           int direction = generateRandomNumber(0, 3);
                switch (direction)
                {
                case 0: // mur au sud et à l'ouest
                    caseGrid[targetRow][targetCol].wall[SOUTH] = WALL_PRESENT;
                    caseGrid[targetRow][targetCol].wall[WEST] = WALL_PRESENT;
                    break;

                case 1: // mur au sud et à l'est
                    caseGrid[targetRow][targetCol].wall[SOUTH] = WALL_PRESENT;
                    caseGrid[targetRow][targetCol].wall[EST] = WALL_PRESENT;
                    break;

                case 2: // mur au nord et à l'ouest
                    caseGrid[targetRow][targetCol].wall[NORTH] = WALL_PRESENT;
                    caseGrid[targetRow][targetCol].wall[WEST] = WALL_PRESENT;
                    break;

                case 3: // mur au nord et à l'est
                    caseGrid[targetRow][targetCol].wall[NORTH] = WALL_PRESENT;
                    caseGrid[targetRow][targetCol].wall[EST] = WALL_PRESENT;
                    break;
                }
            }


void addWall(CASE *grid)
{
           int direction = generateRandomNumber(0, 3);
                switch (direction)
                {
                case 0: // mur au sud et à l'ouest
                    grid->wall[SOUTH] = WALL_PRESENT;
                    grid->wall[WEST] = WALL_PRESENT;
                    break;

                case 1: // mur au sud et à l'est
                    grid->wall[SOUTH] = WALL_PRESENT;
                    grid->wall[EST] = WALL_PRESENT;
                    break;

                case 2: // mur au nord et à l'ouest
                    grid->wall[NORTH] = WALL_PRESENT;
                    grid->wall[WEST] = WALL_PRESENT;
                    break;

                case 3: // mur au nord et à l'est
                    grid->wall[NORTH] = WALL_PRESENT;
                    grid->wall[EST] = WALL_PRESENT;
                    break;
                }
            }